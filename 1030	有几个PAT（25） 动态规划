//题目描述
//字符串APPAPT中包含了两个单词“PAT”，其中第一个PAT是第2位(P),第4位(A),第6位(T)；第二个PAT是第3位(P),第4位(A),第6位(T)。
//现给定字符串，问一共可以形成多少个PAT？
//
//输入描述:
//输入只有一行，包含一个字符串，长度不超过105，只包含P、A、T三种字母。
//
//输出描述:
//在一行中输出给定字符串中包含多少个PAT。由于结果可能比较大，只输出对1000000007取余数的结果。
//
//输入例子:
//APPAPT
//
//输出例子:
//2

#include<stdio.h>
#include<string.h>
int main()
{
	char c;
	long long p=0,pa=0,pat=0;
	while(scanf("%c",&c) && c!=' '&& c!='\n'){
		if(c=='P')
			p++;
		else if(c=='A'){
			pa+=p;
		}
		else if(c=='T'){
			pat+=pa;
		}
	}
	printf("%lld",pat%1000000007);
	return 0;
}



这题本来想到的是用3个for循环进行计数，提交上去之后全部测试点超时，在讨论中查到本动态规划方法，精妙。



附原来的代码如下

#include<stdio.h>
#include<string.h>
int main()
{
	char l[100010];
	scanf("%s",l);
	int len = strlen(l);
	long long count=0;
	
	for(int i=0;i<len-2;i++)
		if(l[i]=='P')
			for(int j=i+1j<len-1;j++)
				if(l[j]=='A')
					for(int k=j+1;k<len;k++)
						if(l[k]=='T')
							count++;
	count%=1000000007;
	printf("%lld",count);
	return 0;
}


时间复杂度为n^3
