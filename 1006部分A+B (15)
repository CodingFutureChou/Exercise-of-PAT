#include<stdio.h>

int findN(int num,int d)
{
	int N=0;
	while(num)
	{
		if(num%10==d) N++;
		num/=10;
	}
	return N;
}
int creatP(int d,int n)
{
	if(n==0) return 0;
	int p=d;
	for(int i=1;i<n;i++)
	{
		p=p*10+d;
	}
	return p; 
}
int main()
{
	int a,b,da,db;
	scanf("%d%d%d%d",&a,&da,&b,&db);
	int pa=creatP(da,findN(a,da));
	int pb=creatP(db,findN(b,db));
	printf("%d",pa+pb);
	return 0;
 } 
 
 
 
 
 题目描述
正整数A的“DA（为1位整数）部分”定义为由A中所有DA组成的新整数PA。例如：给定A = 3862767，DA = 6，则A的“6部分”PA是66，因为A中有2个6。
 
 现给定A、DA、B、DB，请编写程序计算PA + PB。

输入描述:
输入在一行中依次给出A、DA、B、DB，中间以空格分隔，其中0 < A, B < 1010。


输出描述:
在一行中输出PA + PB的值。

输入例子:
3862767 6 13530293 3

输出例子:
399
